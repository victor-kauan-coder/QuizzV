enunciado;resposta;justificativa
"A microarquitetura é dividida em duas partes principais: a Parte Operativa (ou Caminho de Dados) e a Parte de Controle.";True;"A microarquitetura é de fato dividida na Parte Operativa, que executa operações sobre os dados, e a Parte de Controle, que gera os sinais de controle ciclo-a-ciclo para a parte operativa."
"A Parte de Controle é composta por todos os componentes responsáveis pela execução de operações elementares sobre os dados.";False;"A descrição corresponde à Parte Operativa ou Caminho de Dados. A Parte de Controle é responsável por gerar os sinais de controle."
"O MIC-1, uma microarquitetura didática, é uma máquina de ciclo único.";Falso;"O MIC-1 é uma máquina multiciclo. Em uma arquitetura de ciclo único, cada instrução é executada em apenas um ciclo de clock. Já em uma máquina multiciclo, a execução de uma instrução é dividida em várias microtarefas, cada uma executada em um ciclo de clock separado." 
"O MIC é constituído por um grande conjunto de instruções, um banco de registradores, uma ULA e três barramentos internos.";False;"O MIC tem um pequeno conjunto de instruções. As outras características (banco de registradores, ULA e três barramentos) estão corretas."
"O Registrador de Controle (MIR) armazena a palavra de controle que define os sinais para a Parte Operativa.";True;"O Registrador de Controle (MIR) contém a microinstrução atual, que define o conjunto de sinais de controle para a parte operativa."
"Na Parte Operativa do MIC, o sinal 'ALU' define se há deslocamento e a direção.";False;"O sinal 'SH' (Shifter) define o deslocamento. O sinal 'ALU' define a operação da ULA."
"Uma microinstrução é a palavra armazenada na memória de microprograma que define os sinais de controle para uma microtarefa.";True;"Essa é a definição de microinstrução."
"A Unidade de Controle proposta por Tanenbaum para o MIC é baseada em máquina de estados.";False;"A Unidade de Controle do MIC é baseada em microprograma."
"Em uma arquitetura de acumulador, o registrador AC serve como destino padrão para os resultados das operações.";True;"A arquitetura de acumulador usa um registrador acumulador (AC) como destino padrão para o resultado de operações."
"A ISA (Instruction Set Architecture) define apenas o conjunto de instruções que o computador é capaz de executar.";False;"A ISA também define a interface entre o hardware e o software e o conjunto de registradores visíveis ao programador."
"A instrução 'ADD A, B' é um exemplo de instrução com três endereços.";False;"A instrução 'ADD A, B' possui dois endereços. A instrução 'ADD A, B, C' teria três."
"A ISA MAC-1 é uma arquitetura de conjunto de registradores (Register-set Architecture).";False;"O MAC-1 é uma 'Accumulator Architecture' e não uma arquitetura de conjunto de registradores."
"Na instrução `LODD X`, o modo de endereçamento é Imediato.";False;"A instrução `LODD X` utiliza endereçamento Direto. O modo Imediato seria para 'LOCO X'."
"O ciclo de vida de uma instrução na CPU consiste em: Busca, Decodificação, Busca dos Operandos, Execução e Armazenamento do Resultado.";True;"Estas são as cinco etapas do ciclo de vida da instrução."
"Na fase de 'Busca da Instrução', o `PC` (Program Counter) é usado para endereçar a memória e o conteúdo lido é armazenado no `MBR` e depois no `IR`.";True;"A descrição corresponde corretamente à etapa de Busca da Instrução."
"Na instrução hipotética `Add R3, R2, R1`, o registrador `R1` é o destino e `R2` e `R3` são operandos fonte.";False;"O significado da instrução `Add R3, R2, R1` é `R3 = R2 + R1`. Portanto, R3 é o destino e R1 e R2 são os operandos fonte."
"Na fase de 'Execução da Operação', a Unidade de Controle realiza os cálculos sobre os dados.";False;"É a ULA (Unidade de Lógica e Aritmética), que é parte do Caminho de Dados, que executa as operações. A Unidade de Controle gerencia o processo."
"A codificação da operação (`opcode`) de uma instrução define a operação a ser realizada.";True;"O código da operação, ou `opcode`, é a parte da instrução que define a operação a ser executada."
"O termo 'palavra' em arquitetura de computadores se refere unicamente à quantidade de bits usada para endereçar a memória.";False;"A palavra se refere à quantidade de bits usada para a representação de dados e endereços."
"Na arquitetura de Von Neumann, códigos executáveis (instruções) e dados são armazenados na memória principal.";True;"Esta é a principal característica da arquitetura de Von Neumann, onde instruções e dados compartilham o mesmo espaço de memória."
"O `Barramento` é um subsistema de comunicação responsável por conectar os diferentes componentes de um computador.";True;"O barramento é o sistema de comunicação que liga a CPU, memória e periféricos."
"A instrução `LODD X` do `MAC` tem como significado `AC := M[X]`.";True;"O significado da instrução `LODD X` é carregar no acumulador (`AC`) o conteúdo da posição de memória `X`."
"O `Caminho de Dados` (Datapath) é a parte da CPU que contém a Unidade de Controle e os circuitos necessários para a execução de instruções.";False;"A Unidade de Controle e o Caminho de Dados são duas partes distintas da CPU. O Caminho de Dados contém a ULA e outros circuitos, e a Unidade de Controle o controla."
"A instrução `RETN` no `MAC` restaura o endereço do `PC` a partir do topo da pilha.";True;"A instrução `RETN` carrega o valor da memória apontada por `SP` no `PC` e incrementa o `SP`."
"O modo de endereçamento local no `MAC` acessa a memória usando um deslocamento em relação ao registrador `SP` (Stack Pointer).";True;"O endereçamento local utiliza a fórmula `M[SP + X]`, onde X é o deslocamento."
"Na lógica de sequenciamento do `MIC`, se `COND = 2` e `Z = 1`, a próxima instrução estará no endereço `ADDR`.";True;"A regra para `COND = 2` é: se `Z = 1`, a próxima instrução estará em `ADDR`, caso contrário, estará em `MPC + 1`."
"No modelo Harvard, memória de dados e memória de instruções compartilham o mesmo barramento.";False;"No modelo Harvard, as memórias de dados e de instruções são fisicamente separadas, cada uma com seu próprio barramento."
"A técnica de especulação em processadores pode levar a execução de instruções que depois precisam ser descartadas.";True;"Na especulação, o processador executa instruções antecipadamente. Caso a previsão esteja incorreta, os resultados são descartados."
"O registrador PC (Program Counter) sempre aponta para o endereço da próxima instrução a ser executada.";True;"O PC armazena o endereço da próxima instrução da sequência normal de execução."